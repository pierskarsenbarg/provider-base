// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package base

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/provider-base/sdk/go/base/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// GetOrganization gets the Organization information
func LookupAccount(ctx *pulumi.Context, args *LookupAccountArgs, opts ...pulumi.InvokeOption) (*LookupAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountResult
	err := ctx.Invoke("base:index:getAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAccountArgs struct {
	// Name of the Account
	AccountName string `pulumi:"accountName"`
}

type LookupAccountResult struct {
	// Id of account created
	AccountId string `pulumi:"accountId"`
	// Environment of account
	Environment string `pulumi:"environment"`
	// Name of account created
	Name string `pulumi:"name"`
}

func LookupAccountOutput(ctx *pulumi.Context, args LookupAccountOutputArgs, opts ...pulumi.InvokeOption) LookupAccountResultOutput {
	outputResult := pulumix.ApplyErr[*LookupAccountArgs](args.ToOutput(), func(plainArgs *LookupAccountArgs) (*LookupAccountResult, error) {
		return LookupAccount(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupAccountResultOutput, *LookupAccountResult](outputResult)
}

type LookupAccountOutputArgs struct {
	// Name of the Account
	AccountName pulumix.Input[string] `pulumi:"accountName"`
}

func (args LookupAccountOutputArgs) ToOutput() pulumix.Output[*LookupAccountArgs] {
	allArgs := pulumix.All(
		args.AccountName.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupAccountArgs {
		return &LookupAccountArgs{
			AccountName: resolvedArgs[0].(string),
		}
	})
}

type LookupAccountResultOutput struct{ *pulumi.OutputState }

func (LookupAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountResult)(nil)).Elem()
}

func (o LookupAccountResultOutput) ToOutput(context.Context) pulumix.Output[*LookupAccountResult] {
	return pulumix.Output[*LookupAccountResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupAccountResultOutput) AccountId() pulumix.Output[string] {
	return pulumix.Apply[*LookupAccountResult](o, func(v *LookupAccountResult) string { return v.AccountId })
}

func (o LookupAccountResultOutput) Environment() pulumix.Output[string] {
	return pulumix.Apply[*LookupAccountResult](o, func(v *LookupAccountResult) string { return v.Environment })
}

func (o LookupAccountResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupAccountResult](o, func(v *LookupAccountResult) string { return v.Name })
}
