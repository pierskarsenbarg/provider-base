// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Base
{
    public static class GetAccount
    {
        /// <summary>
        /// GetOrganization gets the Organization information
        /// </summary>
        public static Task<GetAccountResult> InvokeAsync(GetAccountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountResult>("base:index:getAccount", args ?? new GetAccountArgs(), options.WithDefaults());

        /// <summary>
        /// GetOrganization gets the Organization information
        /// </summary>
        public static Output<GetAccountResult> Invoke(GetAccountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountResult>("base:index:getAccount", args ?? new GetAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Account
        /// </summary>
        [Input("AccountName", required: true)]
        public string AccountName { get; set; } = null!;

        public GetAccountArgs()
        {
        }
        public static new GetAccountArgs Empty => new GetAccountArgs();
    }

    public sealed class GetAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Account
        /// </summary>
        [Input("AccountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        public GetAccountInvokeArgs()
        {
        }
        public static new GetAccountInvokeArgs Empty => new GetAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccountResult
    {
        /// <summary>
        /// Id of account created
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Environment of account
        /// </summary>
        public readonly string Environment;
        /// <summary>
        /// Name of account created
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetAccountResult(
            string accountId,

            string environment,

            string name)
        {
            AccountId = accountId;
            Environment = environment;
            Name = name;
        }
    }
}
